<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【手记】水手与海</title>
      <link href="/2024/04/19/shou-ji-shui-shou-yu-hai/"/>
      <url>/2024/04/19/shou-ji-shui-shou-yu-hai/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】水手与海"><a href="#【手记】水手与海" class="headerlink" title="【手记】水手与海"></a>【手记】水手与海</h1><hr><p>从狼奔豕突和闪闪发光的漫游者之间变换的林中猎手的梦中醒来，迎面是咸腥的海风和刚刚降下风帆的帆船。</p><p>在船只与陆地之间有零星的水手正在搬运货物，古铜色虬扎的皮肤诉说着海上曾经的波涛惊骇。</p><p>你伫立在原地，水手打量着你，远比一件货品来得匆匆。</p><p>你上前礼貌地询问方位，时间几何，来处归途，你描述模糊记忆里的那不勒斯，希冀从他人口中获得吉光片羽真实的引线。</p><p>有些人熟视无睹，有的水手向你摇头拒绝交谈，有的人留下只言片语，也有人停下来同你攀谈，你一一道谢。</p><p>你得到了一些讯息，此处远离内陆，少有人烟，与你所见并无二致。而停泊的帆船很快就要再度起航，返航前往尚算和平的王国城都。</p><p>在城郭高高的城墙被水泥钢筋乃至鲜血浇灌垒砌之前，恶龙突破重重防守，掠走王国的明珠，为王国上空覆下浓重的阴影。</p><p>——恶龙。那并不是一个人的梦魇，扇动着看不见的死亡之翼，伴随着诡秘的雾气，恶龙掀翻船只，向海底献上众人的遗骨。</p><p>水手止了声音，眼里蒙上一层海雾般的阴翳。</p><p>像想起征战的英雄，往日的故友，更甚是早逝的小女儿。</p><p>他最终调转了话头，询问你的来时去往。</p><hr><p>一番交谈后，你表示希望一同搭乘船只前往遥远的王国，记忆里的那不勒斯与水手口中描述的城郭并无二致。但摸遍浑身上下，却有些尴尬地发现自己身上并无分文。</p><p>你于是捧出了那颗宝石。</p><p>“你……”</p><p>水手看向你，起了个话头，最终却什么也没说。他应允了你上船的请求，却没有收下那枚宝石。</p><p>“你认识一个……紫色眼睛的旅行者吗？”</p><p>“不……没什么。”</p><p>在即将开口的时候，他却摇摇头，示意你不用再向他传达你的回答。</p><p>你默然。</p><p>自冲角看向向船尾高悬的船灯，主桅旁的舱室壁上搁靠着一人高细长的桨船和数量不菲的木桶。</p><p>当最后一缕残阳没入海平面，船长发号施令，舵手掌握方向，水手们扬起船帆，将锚拉回甲板上。</p><p>跟随者罗盘的指引，船只谨慎地沿着海岸线行驶。</p><hr><p>接连几天都是好天气，海面上风平浪静。</p><p>这段时日来，你一直在船上做一些力所能及的事，譬如搬抬重物，值夜，更甚是哄小孩儿入睡。</p><p>当夜幕降下的时候，小孩子纷纷被传唤进船舱内。“勇士”收起了长剑，自己掖好了被角。“恶龙”也归了巢，久久不肯入眠，拉着大人的衣角请求一个甜蜜的睡前故事。</p><p>船上讲述的睡前故事虽夜夜相似，但如同摇篮上的床铃，会在梦境里变幻着绮丽的花样。</p><p>“故事的一开始是毁坏一切的邪恶巨龙，灾难的降临，流离失所的人们，弥漫的硝烟和灼热的泪水。”</p><p>“那我也会和爸爸妈妈分开吗？”</p><p>重复的故事也会衍化出千百个为什么，而当干净得只有渴求着答案的目光望向你时，第一时间，你难以拒绝。</p><p>有时候孩子会像这样小心翼翼地问。</p><p>“一定不会分开。”</p><p>“那我会和克鲁鲁分开吗？”</p><p>孩子的眼睫颤动着，小声地再度确认。</p><p>你没有再做出回应。</p><p>孩子的母亲向你传达的故事的终局，在孩子的枕席边，睡梦之前——溪流总会重新流动，鲜花将于暖春盛放，思乡者终会重归故土。</p><p>勇者历经重重磨难，必然战胜恶龙，救回公主。</p><p>你摸了摸孩子的头，没有多做解释，只是慢慢将希望倾吐于唇齿之间。</p><p>“勇者踏上讨伐恶龙的征途，勇者帮助了形形色色的人，勇者历经了千辛万苦。”</p><p>“就勇者一个人吗？”</p><p>“他孤身一人。”</p><p>你顿了顿，像是在咀嚼故事中那位英雄的奋战史——</p><p>“勇者并不鲁莽行事，他虽然勇敢，却从未冲动。”</p><hr><p>夜色渐浓，舱室外越发安静，只有风声和潺潺的水声依旧。所有在甲板上工作的成年人逐渐变得无精打采，身体逐渐变得僵冷。而正在此刻，甲板上升起了低低的歌声。</p><p>歌声从四面透风的船长室传来，在甲板上盘旋，舵手用低沉的嗓音唱着一首小调。</p><p><del>在汪洋的怀抱深处，躺着我们的故乡。游荡的船只知晓她的存在，他们唱着歌儿离开这里，归来时亦在海滩上吟唱</del></p><p><del>她被一群平凡之人所深深爱着，死在她怀里的人们也依旧爱她。流浪旅人在汪洋徜徉，梦魂却在她的边界游荡，谁会忘记她？我们的故乡</del></p><p><del>在旅途中出生的孩子，未曾见过她的容颜，却仍追寻海岸线。不愿割舍的她携着海风，亦将新生儿爱抚</del></p><p>这并不是一首搏击浪潮的海洋之歌，而是一首莼鲈之思的缱倦乡曲。思念着远方厚重的泥土，无论我们身在何处，星辰之下抑或大海之上。</p><p>值夜的水手们默默挺起了脊背，先是一个人，接着两个，三个……一起轻轻哼唱。</p><p>歌声浮在甲板上，船室将它隔绝，此时母亲们的摇篮曲刚落下最后一个音节，有些未完的睡前故事也进行到最后一段。</p><p>“恶龙从巢穴中苏醒，转身向着勇者咆哮，声音震耳欲聋。”</p><p>“勇者面向恶龙，守卫着背后的家园，高举起象征着勇气与正义的勇者之剑。”</p><p>“勇者说道：”</p><p>“‘大陆的花朵将重新绽放，公主将回归王国，而你，恶龙，将死于我的剑下。’”</p><p>如同幼猫酣睡一般心满意足，孩子们安然落入英雄和鲜花的梦之旅中。</p><hr><p>怒号的狂风和热情的涌流陆续带走了“她”的一部分。</p><p>浪潮裹挟着一部分的“她”奔向远方，又有一部分的“她”被风所吹散。</p><p>海水捧着扬帆的船只，一部分的“她”不断下沉，沉到陈年船骸的怀里，船骸的金色桅杆斜斜地竖着，无数的珍宝在海底寂静无声。</p><p>时间流淌着，现世的人们从不回头，“她”漂浮于水面之上，在半空中徘徊，分散继而又聚拢，“她”无法仅凭借自己的力量鼓动风帆，游魂并不是真正的自由。</p><p>“她”是否在等待着什么？是还有什么未竟之事吗？以至于被束缚于此，以致于在漫长的轮回里徜徉，灵魂久久不灭。</p><p>——最后一部分的“她”，打着旋，拂过旅行者的发梢，追逐着一个个远望的目光，一张张模糊的面影。</p><p>但“她”总不能停驻太久，她只能借助风声和浪潮拍打的声音，祈祷般为所见之人祝福着，与那思乡的曲调相合。</p>]]></content>
      
      
      <categories>
          
          <category> 收录集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】NovelAI进行绘画创作</title>
      <link href="/2024/04/14/xue-xi-novelai-shi-yong-xin-de/"/>
      <url>/2024/04/14/xue-xi-novelai-shi-yong-xin-de/</url>
      
        <content type="html"><![CDATA[<h1 id="NovelAI进行绘画创作"><a href="#NovelAI进行绘画创作" class="headerlink" title="NovelAI进行绘画创作"></a>NovelAI进行绘画创作</h1><p>近期在尝试制作的Unity游戏项目需要一些CG素材，由于实在缺乏资金向画师约稿……所以这边就想着用NovelAI或者Midjourney这样的AI绘画工具来生成一些令人满意的素材~</p><p>试了一下，还是NovelAI的生成效果比较好。不过用起来也很麻烦呀，需要去调整很多东西，改一些参数，合理选择<code>Tag</code>才能保证产图的效果。</p><p>在这个过程中，也可以学到一些调参方面的经验吧，大概。</p><hr><blockquote><p><strong>登录已有的NovelAI网页资源</strong></p></blockquote><p>XianYun Web：<a href="https://nai3.xianyun.cool/main#/gen_img">https://nai3.xianyun.cool/main#/gen_img</a></p><p>不建议用NovelAI官网提供的版本……之前试着用过，效果并不如一些整合后的资源网所能提供的效果好。</p><h3 id="一、界面介绍"><a href="#一、界面介绍" class="headerlink" title="一、界面介绍"></a>一、界面介绍</h3><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/NovelAI%E7%95%8C%E9%9D%A2%E5%9B%BE.jpg?imageSlim"></p><p><strong>主绘图界面主要分为三部分：Prompts编辑、绘制次数设定、绘图参数调整。</strong></p><h4 id="Prompts编辑"><a href="#Prompts编辑" class="headerlink" title="Prompts编辑"></a>Prompts编辑</h4><p>在<code>Prompts</code>编辑界面，主要是<code>Tag</code>的选取。选取<code>Tag</code>对图像质量有着不可忽略的指导作用，一定要确保<code>Tag</code>符合自己的要求标准。</p><ol><li><code>Tag</code>必须是英文输入，以”,”为间隔。实际上输入语言文本也能够进行生成，不过不太建议这样做。（虽然不太清楚它的文本序列<code>Encoder-Decoder</code>怎么设置的，应该是从一串文本序列里识别到特定的标签然后拿标签进行指导生成？）可以用上面自带的内容翻译进行中英互译。</li><li><code>Tag</code>里的括号表示加权，对某一个提示词的指导权重进行加强，直白点就是围绕这个提示词的生成效果变得更重。</li><li>如果不知道该用哪些提示词比较好，可以在左侧的<code>Tag</code>编辑器里预选一些可参考的提示词。</li><li>可以在<code>Tag</code>里指导生成图像所选用的画师画风。格式为”artist: xxx”，只要是模型预训练过的画师数据都可以进行指导生成。</li><li>词条笔记本、上传词条、随机<code>Tag</code>这些，日常使用很少用到，不作详述。</li></ol><h4 id="绘图参数调整"><a href="#绘图参数调整" class="headerlink" title="绘图参数调整"></a>绘图参数调整</h4><p>在调参界面，可以设定模型绘制的一些参数。一般来说都不必刻意去进行更改。</p><p><strong>长宽设置：</strong><code>Width</code>和<code>Height</code>可以指定生成的图像大小比例，特定分辨率需要勾选启用分辨率才能应用生成。一般来说要增加图像的长宽像素的话，需要更多的显存。大尺度的图像一致性会随着分辨率的提高而变差（模型是在 512x512 的基础上训练的）。非常小的值（例如 256 像素）也会降低图像质量。</p><p><strong>采样器设置：</strong>目前好用的有 <code>Euler</code>，<code>Euler a</code>（更细腻），和 <code>DDIM</code>。推荐 <code>Euler a</code> 和 <code>DDIM</code>，**新手推荐使用 <code>Euler a</code>**。</p><p><code>Euler a</code> 富有创造力，不同步数可以生产出不同的图片。调太高步数 (&gt;30) 效果不会更好。</p><p><code>DDIM</code> 收敛快，但效率相对较低，因为需要很多 step 才能获得好的结果，<strong>适合在重绘时候使用</strong></p><p><code>LMS</code> 和 <code>PLMS</code> 是 <code>Euler</code> 的衍生，它们使用一种相关但稍有不同的方法（平均过去的几个步骤以提高准确性）。大概 30 step 可以得到稳定结果</p><p><code>PLMS</code> 是一种有效的 LMS（经典方法），可以更好地处理神经网络结构中的奇异性</p><p><code>DPM2</code> 是一种神奇的方法，它旨在改进 DDIM，减少步骤以获得良好的结果。它需要每一步运行两次去噪，它的速度大约是 DDIM 的两倍。但是如果你在进行调试提示词的实验，这个采样器效果不怎么样……</p><p><code>Euler</code> 是最简单的，因此也是最快的之一。（搬运自AiDraw的文档指导~）</p><p>※ <code>Steps</code>一般不要设置得太少，毕竟是基于Stable Diffusion降噪生成图像。但设置得太高也会徒增生成时间。一般来说拉到28就够了。</p><h4 id="绘制次数设定"><a href="#绘制次数设定" class="headerlink" title="绘制次数设定"></a>绘制次数设定</h4><p>简单易懂，设定一次绘制多少幅画。</p><h3 id="二、拓展功能"><a href="#二、拓展功能" class="headerlink" title="二、拓展功能"></a>二、拓展功能</h3><p>除了最重要的NovelAI绘图部分，网站还设定了许多额外的拓展功能可供使用。</p><h4 id="图像超分辨率"><a href="#图像超分辨率" class="headerlink" title="图像超分辨率"></a>图像超分辨率</h4><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/NovelAI-%E5%9B%BE%E5%83%8F%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87.jpg?imageSlim"></p><p>如果对生成的图像清晰度要求比较高，可以在这里对图像进行清晰化缩放。</p><p>一般来说，选择<code>SwinIR_4x</code>放大算法就够用啦。</p><h4 id="Tag编辑器"><a href="#Tag编辑器" class="headerlink" title="Tag编辑器"></a>Tag编辑器</h4><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/NovelAI-Tag%E7%BC%96%E8%BE%91.jpg?imageSlim"></p><p>如果对绘画功能的提示词<code>Tag</code>设置不明晰的话，可以借助<code>Tag</code>编辑器辅助选择<code>Tag</code>。</p><p>预设提供的<code>Tag</code>标签有很多，随心所欲搭配直到生成令人满意的结果吧。</p><p>除此之外，还有<strong>图像反推Tag</strong>、<strong>图像Tag识别</strong>两项功能，从提供的图像中识别出对应的标签（可能是基于CLIP模型做的吧？之前读<code>Diffu Musk</code>论文的时候读到过类似功能的实现方法）。</p><hr><p>总的来说，差不多就是这样啦。之前看很多大佬通过NovelAI搭配出了非常好看的生成效果，现在自己也试着尝试一下吧。干什么都不容易哇，仅仅是利用AI进行一个生成，想要得到好的结果也需要很多学习和努力。</p><p>姑且自己设置提示词生成了一点素材，后续再挑拣一些后期修改放到Unity项目里吧：</p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/2bdb3aa480d5d437ac1a44f83ddd795.png?imageSlim"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【绘画】近期的一些摸鱼练习</title>
      <link href="/2024/03/15/hui-hua-jin-qi-de-yi-xie-mo-yu-lian-xi/"/>
      <url>/2024/03/15/hui-hua-jin-qi-de-yi-xie-mo-yu-lian-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> 绘画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 兴趣爱好 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】LaTeX 入门笔记</title>
      <link href="/2024/03/11/xue-xi-latex-ru-men-bi-ji/"/>
      <url>/2024/03/11/xue-xi-latex-ru-men-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> 知识整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】Linux服务器上升级Python版本</title>
      <link href="/2024/03/11/xue-xi-linux-fu-wu-qi-shang-sheng-ji-python-ban-ben/"/>
      <url>/2024/03/11/xue-xi-linux-fu-wu-qi-shang-sheng-ji-python-ban-ben/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【活动记录】北邮游园会</title>
      <link href="/2024/03/11/huo-dong-ji-lu-bei-you-you-yuan-hui/"/>
      <url>/2024/03/11/huo-dong-ji-lu-bei-you-you-yuan-hui/</url>
      
        <content type="html"><![CDATA[<h1 id="北邮游园会"><a href="#北邮游园会" class="headerlink" title="北邮游园会"></a>北邮游园会</h1><p>记录一下去北邮参加游园会的经历，玩得还是很开心的！</p><hr>]]></content>
      
      
      <categories>
          
          <category> 活动记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 活动 </tag>
            
            <tag> 出行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【活动记录】国家植物园</title>
      <link href="/2024/03/11/huo-dong-ji-lu-guo-jia-zhi-wu-yuan/"/>
      <url>/2024/03/11/huo-dong-ji-lu-guo-jia-zhi-wu-yuan/</url>
      
        <content type="html"><![CDATA[<h1 id="国家植物园一日行"><a href="#国家植物园一日行" class="headerlink" title="国家植物园一日行"></a>国家植物园一日行</h1><p>借着近现代史课小组实践作业的机会，去国家植物园游玩了一上午~</p><hr>]]></content>
      
      
      <categories>
          
          <category> 活动记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 活动 </tag>
            
            <tag> 出行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【活动记录】开源春耕行</title>
      <link href="/2024/03/11/huo-dong-ji-lu-kai-yuan-chun-geng-xing/"/>
      <url>/2024/03/11/huo-dong-ji-lu-kai-yuan-chun-geng-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> 活动记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 活动 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【活动记录】望京之行</title>
      <link href="/2024/03/11/huo-dong-ji-lu-wang-jing-zhi-xing/"/>
      <url>/2024/03/11/huo-dong-ji-lu-wang-jing-zhi-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="望京之行"><a href="#望京之行" class="headerlink" title="望京之行"></a>望京之行</h1><p>-趁着十一国庆七天假，正好上海的兄弟来北京，一块聚一聚去望京玩一天~记录一下-</p><hr>]]></content>
      
      
      <categories>
          
          <category> 活动记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 活动 </tag>
            
            <tag> 出行 </tag>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity】开发日志_Level.2</title>
      <link href="/2024/03/01/unity-kai-fa-ri-zhi-level.2/"/>
      <url>/2024/03/01/unity-kai-fa-ri-zhi-level.2/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity】开发日志_Level.1</title>
      <link href="/2024/02/26/unity-kai-fa-ri-zhi-level.1/"/>
      <url>/2024/02/26/unity-kai-fa-ri-zhi-level.1/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> 知识整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity】横版平台跳跃游戏~第一个Unity练习作品</title>
      <link href="/2024/02/20/unity-heng-ban-ping-tai-tiao-yue-you-xi-di-yi-ge-unity-lian-xi-zuo-pin/"/>
      <url>/2024/02/20/unity-heng-ban-ping-tai-tiao-yue-you-xi-di-yi-ge-unity-lian-xi-zuo-pin/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器上升级Python版本"><a href="#在Linux服务器上升级Python版本" class="headerlink" title="在Linux服务器上升级Python版本"></a>在Linux服务器上升级Python版本</h1><p>近段时间在用导师给的服务器跑项目，所以升级了一下 Python 版本。这里分享下自己在升级 Python 时的流程和遇到的一些问题~</p><p>参考博客：<a href="https://blog.csdn.net/Jxq_IT/article/details/103971862">https://blog.csdn.net/Jxq_IT/article/details/103971862</a></p><hr><blockquote><p><strong>直接更新系统Python版本</strong></p></blockquote><h4 id="一、查看系统中的Python版本"><a href="#一、查看系统中的Python版本" class="headerlink" title="一、查看系统中的Python版本"></a>一、查看系统中的Python版本</h4><p>我的服务器是 Ubuntu 18.04.6 版本，之前预装的 Python 版本是 3.7.13，由于论文需要，故要升级到 3.10 版本。首先我们用如下指令查看当前系统的 Python 版本：</p><ol><li><p>使用<code>Python</code>或<code>Python3</code>命令：</p><pre class=" language-text"><code class="language-text">python --versionpython3 --version</code></pre></li><li><p>直接查看<code>bin</code>文件夹下安装的 Python 目录：</p><pre class=" language-text"><code class="language-text">ls /usr/bin/python*</code></pre></li></ol><h4 id="二、利用wget下载对应版本的Python包"><a href="#二、利用wget下载对应版本的Python包" class="headerlink" title="二、利用wget下载对应版本的Python包"></a>二、利用wget下载对应版本的Python包</h4><ol><li><p>在当前的目录下，安装 Python 包。指令如下：</p><pre class=" language-text"><code class="language-text">wget https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz</code></pre></li><li><p>上传服务器并解压缩：</p><pre class=" language-text"><code class="language-text">tar -xf Python-3.10.13.tgz</code></pre></li><li><p>进入解压缩后的文件夹，并编译：</p><pre class=" language-text"><code class="language-text">./configure && make && make install</code></pre></li></ol><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_1.jpg?imageSlim" alt="Python官网的相关版本"></p><p>网址：<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><p><strong>编译结束后，正常情况下会装到&#x2F;usr&#x2F;local&#x2F;bin目录下，记得去看一下！</strong></p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%BE_2.jpg?imageSlim"></p><h4 id="三、创建软连接"><a href="#三、创建软连接" class="headerlink" title="三、创建软连接"></a>三、创建软连接</h4><ol><li><p>首先检查系统是否已经有 <code>python3、python </code>的软链接，可以使用以下命令：</p><pre class=" language-text"><code class="language-text">ls -l /usr/bin/python3ls -l /usr/bin/python</code></pre></li><li><p>删除现有软连接，并创建新的软连接指向<code>Python 3.10</code>：</p><pre class=" language-text"><code class="language-text">sudo rm /usr/bin/python3sudo rm /usr/bin/pythonsudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/python3.10 /usr/bin/pythonsudo ln -sf /usr/local/bin/python3.10-config /usr/bin/python-config</code></pre></li></ol><p>​※注意，如果已经是root用户的话，不需要加sudo哦</p><h4 id="四、检查环境变量"><a href="#四、检查环境变量" class="headerlink" title="四、检查环境变量"></a>四、检查环境变量</h4><p>要运行一下 <code>echo $PATH</code> 来查看当前的 <code>PATH</code> 设置，确保 <code>/usr/bin</code>（或存放了 Python 3.10 软链接的目录）在任何可能包含旧 Python 版本的目录之前。否则的话，执行<code>python --version</code>仍然会显示之前的版本！</p><pre class=" language-text"><code class="language-text">export PATH=/usr/bin:$PATH</code></pre><p>执行这个命令，暂时将将 <code>/usr/bin</code> 移到 <code>PATH</code> 的前面。</p><p>最后，再运行一遍<code>python --version</code>来检查。如果还是不行，试试用<code>hash -r</code>清除一下bash的缓存，或重新打开 shell 会话。</p><blockquote><p><strong>使用Conda管理Python版本</strong></p></blockquote><p>使用Conda来进行管理的话，操作起来就方便多啦。当然你需要先保证系统里预装了Conda。</p><pre class=" language-text"><code class="language-text">conda create -n myenv python=3.10conda activate myenv</code></pre><p>这样会创建一个名为 <code>myenv</code> 的新环境，其中安装了 <code>Python 3.10</code>，然后激活这个环境。</p><p>如果 <code>conda activate</code> 命令提示不能正确使用，按它的提示来，初始化一下 Conda 对 shell 的支持：</p><pre class=" language-text"><code class="language-text">conda init bash</code></pre><hr><p>好的，以上就是我的解决过程啦！希望能够帮到你~⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【手记】2024-新春寄语</title>
      <link href="/2024/02/10/shou-ji-2024-xin-chun-ji-yu/"/>
      <url>/2024/02/10/shou-ji-2024-xin-chun-ji-yu/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】2024-新春寄语"><a href="#【手记】2024-新春寄语" class="headerlink" title="【手记】2024-新春寄语"></a>【手记】2024-新春寄语</h1><hr><p>xxx</p><p>现在的烟花款式变得越来越多啦，造型和花型也都越来越漂亮，有点变相地羡慕小侄子们嘞。</p><p>小时候总在期待着的放烟花的活动，到现在这个年纪，早已不执着于那份纯真的趣味，仅仅只会欣赏烟火绽放瞬间夺目的光点。点燃它们的乐趣就给侄子们享受啦。</p><p>曾经的快乐总会伴着时光慢慢地在心里改变。随着自身的成长，每年的长度也都不尽相同。或许十年之后，一年之期和现在也不会再是同样的感受。</p><p>所以，好好把握当下叭！多陪伴身边的人，用双手掬起流淌在掌心的岁月。人生漫漫，每一年都无比珍重，每一刻都独特耀眼。<br>新年快乐！</p><p>愿新的一年里，也能怀揣这份小小的幸福，度过每一日的一点一滴。</p><p>xxx</p><p><img src="https://cyan-1314223569.cos.ap-beijing.myqcloud.com/test/2024.jpg?imageSlim"></p>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 寄语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【手记】小径</title>
      <link href="/2023/10/26/shou-ji-xiao-jing/"/>
      <url>/2023/10/26/shou-ji-xiao-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】小径"><a href="#【手记】小径" class="headerlink" title="【手记】小径"></a>【手记】小径</h1><blockquote><p>トレイル（小径）——cover.mamenoi</p></blockquote><hr><p>xxx</p><p>掩埋在纯白细沙里的脚尖</p><p>海风在耳边轻轻诉说</p><p>眼前蔓延的青蓝色</p><p>睁开眼那是多么耀眼的光芒</p><p>至今只在书中领略过的光彩</p><p>无法估计的色温量</p><p>深深印在眼底的圆影</p><p>xxx</p><p>唯有海浪知晓那从未被翻过的扉页</p><p>我们不曾知晓尚未往复重现的历史</p><p>我们并肩仰望的星</p><p>繁星中的某一颗必定是我们的小船</p><p>触及到的这盏灯火</p><p>是多少年月前的产物呢</p><p>浅浅的记忆渐渐流逝</p><p>触及到的全部此刻化作证明</p><p>黑夜最终消散在天空</p><p>带来了全新的黎明</p><p>xxx</p><p>那并不是理所当然</p><p>聆听声音</p><p>停下脚步</p><p>世上竟有如此撼人心弦的景色</p><p>不如上前追问</p><p>即便明知就算询问也不会有答案</p><p>xxx</p><p>我们又能否找到呢</p><p>就像是掬起一片小小的希望般——</p>]]></content>
      
      
      <categories>
          
          <category> 收录集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【随笔】《关于地球的运动》</title>
      <link href="/2023/10/26/sui-bi-guan-yu-di-qiu-de-yun-dong/"/>
      <url>/2023/10/26/sui-bi-guan-yu-di-qiu-de-yun-dong/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】小径"><a href="#【手记】小径" class="headerlink" title="【手记】小径"></a>【手记】小径</h1><blockquote><p>トレイル（小径）——cover.mamenoi</p></blockquote><hr><p>xxx</p><p>掩埋在纯白细沙里的脚尖</p><p>海风在耳边轻轻诉说</p><p>眼前蔓延的青蓝色</p><p>睁开眼那是多么耀眼的光芒</p><p>至今只在书中领略过的光彩</p><p>无法估计的色温量</p><p>深深印在眼底的圆影</p><p>xxx</p><p>唯有海浪知晓那从未被翻过的扉页</p><p>我们不曾知晓尚未往复重现的历史</p><p>我们并肩仰望的星</p><p>繁星中的某一颗必定是我们的小船</p><p>触及到的这盏灯火</p><p>是多少年月前的产物呢</p><p>浅浅的记忆渐渐流逝</p><p>触及到的全部此刻化作证明</p><p>黑夜最终消散在天空</p><p>带来了全新的黎明</p><p>xxx</p><p>那并不是理所当然</p><p>聆听声音</p><p>停下脚步</p><p>世上竟有如此撼人心弦的景色</p><p>不如上前追问</p><p>即便明知就算询问也不会有答案</p><p>xxx</p><p>我们又能否找到呢</p><p>就像是掬起一片小小的希望般——</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漫画分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【随笔】《迷宫饭》</title>
      <link href="/2023/10/26/sui-bi-mi-gong-fan/"/>
      <url>/2023/10/26/sui-bi-mi-gong-fan/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】小径"><a href="#【手记】小径" class="headerlink" title="【手记】小径"></a>【手记】小径</h1><blockquote><p>トレイル（小径）——cover.mamenoi</p></blockquote><hr><p>xxx</p><p>掩埋在纯白细沙里的脚尖</p><p>海风在耳边轻轻诉说</p><p>眼前蔓延的青蓝色</p><p>睁开眼那是多么耀眼的光芒</p><p>至今只在书中领略过的光彩</p><p>无法估计的色温量</p><p>深深印在眼底的圆影</p><p>xxx</p><p>唯有海浪知晓那从未被翻过的扉页</p><p>我们不曾知晓尚未往复重现的历史</p><p>我们并肩仰望的星</p><p>繁星中的某一颗必定是我们的小船</p><p>触及到的这盏灯火</p><p>是多少年月前的产物呢</p><p>浅浅的记忆渐渐流逝</p><p>触及到的全部此刻化作证明</p><p>黑夜最终消散在天空</p><p>带来了全新的黎明</p><p>xxx</p><p>那并不是理所当然</p><p>聆听声音</p><p>停下脚步</p><p>世上竟有如此撼人心弦的景色</p><p>不如上前追问</p><p>即便明知就算询问也不会有答案</p><p>xxx</p><p>我们又能否找到呢</p><p>就像是掬起一片小小的希望般——</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漫画分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【随笔】简议《巴别塔》</title>
      <link href="/2023/10/26/sui-bi-jian-yi-ba-bie-ta/"/>
      <url>/2023/10/26/sui-bi-jian-yi-ba-bie-ta/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】小径"><a href="#【手记】小径" class="headerlink" title="【手记】小径"></a>【手记】小径</h1><blockquote><p>トレイル（小径）——cover.mamenoi</p></blockquote><hr><p>xxx</p><p>掩埋在纯白细沙里的脚尖</p><p>海风在耳边轻轻诉说</p><p>眼前蔓延的青蓝色</p><p>睁开眼那是多么耀眼的光芒</p><p>至今只在书中领略过的光彩</p><p>无法估计的色温量</p><p>深深印在眼底的圆影</p><p>xxx</p><p>唯有海浪知晓那从未被翻过的扉页</p><p>我们不曾知晓尚未往复重现的历史</p><p>我们并肩仰望的星</p><p>繁星中的某一颗必定是我们的小船</p><p>触及到的这盏灯火</p><p>是多少年月前的产物呢</p><p>浅浅的记忆渐渐流逝</p><p>触及到的全部此刻化作证明</p><p>黑夜最终消散在天空</p><p>带来了全新的黎明</p><p>xxx</p><p>那并不是理所当然</p><p>聆听声音</p><p>停下脚步</p><p>世上竟有如此撼人心弦的景色</p><p>不如上前追问</p><p>即便明知就算询问也不会有答案</p><p>xxx</p><p>我们又能否找到呢</p><p>就像是掬起一片小小的希望般——</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【随笔】浅聊生息演算</title>
      <link href="/2023/10/26/sui-bi-qian-liao-sheng-xi-yan-suan/"/>
      <url>/2023/10/26/sui-bi-qian-liao-sheng-xi-yan-suan/</url>
      
        <content type="html"><![CDATA[<h1 id="【手记】小径"><a href="#【手记】小径" class="headerlink" title="【手记】小径"></a>【手记】小径</h1><blockquote><p>トレイル（小径）——cover.mamenoi</p></blockquote><hr><p>xxx</p><p>掩埋在纯白细沙里的脚尖</p><p>海风在耳边轻轻诉说</p><p>眼前蔓延的青蓝色</p><p>睁开眼那是多么耀眼的光芒</p><p>至今只在书中领略过的光彩</p><p>无法估计的色温量</p><p>深深印在眼底的圆影</p><p>xxx</p><p>唯有海浪知晓那从未被翻过的扉页</p><p>我们不曾知晓尚未往复重现的历史</p><p>我们并肩仰望的星</p><p>繁星中的某一颗必定是我们的小船</p><p>触及到的这盏灯火</p><p>是多少年月前的产物呢</p><p>浅浅的记忆渐渐流逝</p><p>触及到的全部此刻化作证明</p><p>黑夜最终消散在天空</p><p>带来了全新的黎明</p><p>xxx</p><p>那并不是理所当然</p><p>聆听声音</p><p>停下脚步</p><p>世上竟有如此撼人心弦的景色</p><p>不如上前追问</p><p>即便明知就算询问也不会有答案</p><p>xxx</p><p>我们又能否找到呢</p><p>就像是掬起一片小小的希望般——</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【写在前面】</title>
      <link href="/2023/10/11/preface-my-daliy-life-xie-zai-qian-mian/"/>
      <url>/2023/10/11/preface-my-daliy-life-xie-zai-qian-mian/</url>
      
        <content type="html"><![CDATA[<h1 id="【写在前面】前言"><a href="#【写在前面】前言" class="headerlink" title="【写在前面】前言"></a>【写在前面】前言</h1><hr><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
